{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hillel \\u043A\\u0443\\u0440\\u0441\\\\React\\\\my-app\\\\client\\\\src\\\\components\\\\Card\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\nimport logo from \"../../logo.svg\";\nimport Input from \"../../components/Input/Input\";\nimport Button from \"../../components/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleLogin = async (userName, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: userName,\n          password\n        })\n      });\n      if (response.status === 200) {\n        const data = await response.json();\n        const {\n          token\n        } = data;\n\n        // Зберігаємо токен у localStorage\n        localStorage.setItem(\"token\", token);\n\n        // Встановлюємо стан isLoggedIn на true\n        setIsLoggedIn(true);\n      } else {\n        console.error(\"Логін або пароль невірні\");\n      }\n    } catch (error) {\n      console.error(\"Помилка при відправці запиту:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {},\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"NEfM2HvPFvZ1XE1UnqojteZUwiA=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","logo","Input","Button","jsxDEV","_jsxDEV","Card","_s","isLoggedIn","setIsLoggedIn","error","setError","handleLogin","userName","password","response","fetch","method","headers","body","JSON","stringify","username","status","data","json","token","localStorage","setItem","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onClick","_c","$RefreshReg$"],"sources":["D:/Hillel курс/React/my-app/client/src/components/Card/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\nimport logo from \"../../logo.svg\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/Button/Button\";\r\n\r\nconst Card = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleLogin = async (userName, password) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username: userName, password }),\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const data = await response.json();\r\n        const { token } = data;\r\n\r\n        // Зберігаємо токен у localStorage\r\n        localStorage.setItem(\"token\", token);\r\n\r\n        // Встановлюємо стан isLoggedIn на true\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        console.error(\"Логін або пароль невірні\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Помилка при відправці запиту:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login-card\">\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <Input onLogin={handleLogin} />\r\n      <Button onClick={() => {}}>Login</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAChD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAET,QAAQ;UAAEC;QAAS,CAAC;MACvD,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC,MAAM;UAAEC;QAAM,CAAC,GAAGF,IAAI;;QAEtB;QACAG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;;QAEpC;QACAjB,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,MAAM;QACLoB,OAAO,CAACnB,KAAK,CAAC,0BAA0B,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,oBACEL,OAAA;IAAKyB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB1B,OAAA;MAAK2B,GAAG,EAAE/B,IAAK;MAAC6B,SAAS,EAAC,UAAU;MAACG,GAAG,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDhC,OAAA,CAACH,KAAK;MAACoC,OAAO,EAAE1B;IAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BhC,OAAA,CAACF,MAAM;MAACoC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;MAAAR,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAtCID,IAAI;AAAAkC,EAAA,GAAJlC,IAAI;AAwCV,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}