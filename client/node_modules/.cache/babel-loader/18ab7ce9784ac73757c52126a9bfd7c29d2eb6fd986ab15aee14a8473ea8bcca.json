{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hillel \\u043A\\u0443\\u0440\\u0441\\\\React\\\\my-app\\\\client\\\\src\\\\components\\\\Input\\\\Input.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Input.css\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  onLogin\n}) => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [userNameError, setUserNameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const handleLogin = () => {\n    // Перевірка на пусті поля\n    if (!userName || !password) {\n      if (!userName) {\n        setUserNameError(\"Поле не може бути пустим\");\n      }\n      if (!password) {\n        setPasswordError(\"Поле не може бути пустим\");\n      }\n      return;\n    }\n\n    // Очищення повідомлень про помилки\n    setUserNameError(\"\");\n    setPasswordError(\"\");\n    onLogin(userName, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"User name\",\n      value: userName,\n      onChange: e => {\n        setUserName(e.target.value);\n        setUserNameError(\"\"); // Очищення повідомлення про помилку при введенні\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), userNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: userNameError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: showPassword ? \"text\" : \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => {\n        setPassword(e.target.value);\n        setPasswordError(\"\"); // Очищення повідомлення про помилку при введенні\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eyeIcon\",\n      onClick: () => setShowPassword(!showPassword),\n      children: showPassword ? /*#__PURE__*/_jsxDEV(FaEyeSlash, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: passwordError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"77JghOVrht/GeZTRNrWURGAIFVU=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","FaEye","FaEyeSlash","jsxDEV","_jsxDEV","Input","onLogin","_s","userName","setUserName","password","setPassword","showPassword","setShowPassword","userNameError","setUserNameError","passwordError","setPasswordError","handleLogin","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Hillel курс/React/my-app/client/src/components/Input/Input.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Input.css\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\n\r\nconst Input = ({ onLogin }) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [userNameError, setUserNameError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const handleLogin = () => {\r\n    // Перевірка на пусті поля\r\n    if (!userName || !password) {\r\n      if (!userName) {\r\n        setUserNameError(\"Поле не може бути пустим\");\r\n      }\r\n      if (!password) {\r\n        setPasswordError(\"Поле не може бути пустим\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Очищення повідомлень про помилки\r\n    setUserNameError(\"\");\r\n    setPasswordError(\"\");\r\n\r\n    onLogin(userName, password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"User name\"\r\n        value={userName}\r\n        onChange={(e) => {\r\n          setUserName(e.target.value);\r\n          setUserNameError(\"\"); // Очищення повідомлення про помилку при введенні\r\n        }}\r\n      />\r\n      {userNameError && <div className=\"error-message\">{userNameError}</div>}\r\n      <input\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => {\r\n          setPassword(e.target.value);\r\n          setPasswordError(\"\"); // Очищення повідомлення про помилку при введенні\r\n        }}\r\n      />\r\n      <div className=\"eyeIcon\" onClick={() => setShowPassword(!showPassword)}>\r\n        {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n      </div>\r\n      {passwordError && <div className=\"error-message\">{passwordError}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}