{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hillel \\u043A\\u0443\\u0440\\u0441\\\\React\\\\my-app\\\\client\\\\src\\\\components\\\\Card\\\\Card.js\";\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\nimport logo from \"../../logo.svg\";\nimport Input from \"../../components/Input/Input\";\nimport Button from \"../../components/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleLogin = (userName, password) => {\n  // Спробуйте авторизувати користувача тут і зберегти токен у localStorage\n  // Після успішної авторизації встановіть isLoggedIn в true\n  // В разі помилки встановіть error з відповідним повідомленням\n  // Приклад перевірки логіну та паролю:\n  if (userName === \"admin\" && password === \"password123\") {\n    localStorage.setItem(\"token\", \"example_token\"); // Зберігаємо токен у localStorage\n    setIsLoggedIn(true);\n  } else {\n    setError(\"Логін або пароль невірні\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {},\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\nexport default Card;","map":{"version":3,"names":["React","useState","logo","Input","Button","jsxDEV","_jsxDEV","handleLogin","userName","password","localStorage","setItem","setIsLoggedIn","setError","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onClick","Card"],"sources":["D:/Hillel курс/React/my-app/client/src/components/Card/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\nimport logo from \"../../logo.svg\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/Button/Button\";\r\n\r\nconst handleLogin = (userName, password) => {\r\n  // Спробуйте авторизувати користувача тут і зберегти токен у localStorage\r\n  // Після успішної авторизації встановіть isLoggedIn в true\r\n  // В разі помилки встановіть error з відповідним повідомленням\r\n  // Приклад перевірки логіну та паролю:\r\n  if (userName === \"admin\" && password === \"password123\") {\r\n    localStorage.setItem(\"token\", \"example_token\"); // Зберігаємо токен у localStorage\r\n    setIsLoggedIn(true);\r\n  } else {\r\n    setError(\"Логін або пароль невірні\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login-card\">\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <Input onLogin={handleLogin} />\r\n      <Button onClick={() => {}}>Login</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAC1C;EACA;EACA;EACA;EACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,aAAa,EAAE;IACtDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;IAChDC,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC,MAAM;IACLC,QAAQ,CAAC,0BAA0B,CAAC;EACtC;EAEA,oBACEP,OAAA;IAAKQ,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBT,OAAA;MAAKU,GAAG,EAAEd,IAAK;MAACY,SAAS,EAAC,UAAU;MAACG,GAAG,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDf,OAAA,CAACH,KAAK;MAACmB,OAAO,EAAEf;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/Bf,OAAA,CAACF,MAAM;MAACmB,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;MAAAR,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAED,eAAeG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}