{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hillel \\u043A\\u0443\\u0440\\u0441\\\\React\\\\my-app\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Input from \"../../components/Input/Input\";\nimport Button from \"../../components/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    userName: \"\",\n    password: \"\"\n  });\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {\n      userName: \"\",\n      password: \"\"\n    };\n    if (!userName) {\n      newErrors.userName = \"Введите логин\";\n      isValid = false;\n    }\n    if (!password) {\n      newErrors.password = \"Введите пароль\";\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = async () => {\n    if (validateForm()) {\n      try {\n        const response = await fetch(\"http://localhost:5000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: userName,\n            password: password\n          })\n        });\n        if (response.status === 200) {\n          const data = await response.json();\n          localStorage.setItem(\"token\", data.token);\n          // Здесь можно выполнить переход на другую страницу, если необходимо\n        } else {\n          // Обработка ошибки при неверном логине/пароле\n          console.error(\"Логін або пароль невірні\");\n        }\n      } catch (error) {\n        // Обработка других ошибок\n        console.error(\"Помилка під час авторизації\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: userName,\n      onChange: e => setUserName(e.target.value),\n      placeholder: \"User name\",\n      showError: !!errors.userName,\n      errorMessage: errors.userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      showError: !!errors.password,\n      errorMessage: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      text: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"4JCuHfHJG6pqe3nPXH2ZibQjFaA=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Input","Button","jsxDEV","_jsxDEV","Form","_s","userName","setUserName","password","setPassword","errors","setErrors","validateForm","isValid","newErrors","handleSubmit","response","fetch","method","headers","body","JSON","stringify","username","status","data","json","localStorage","setItem","token","console","error","className","children","value","onChange","e","target","placeholder","showError","errorMessage","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","text","_c","$RefreshReg$"],"sources":["D:/Hillel курс/React/my-app/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/Button/Button\";\r\n\r\nconst Form = () => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({ userName: \"\", password: \"\" });\r\n\r\n  const validateForm = () => {\r\n    let isValid = true;\r\n    const newErrors = { userName: \"\", password: \"\" };\r\n\r\n    if (!userName) {\r\n      newErrors.userName = \"Введите логин\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password) {\r\n      newErrors.password = \"Введите пароль\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (validateForm()) {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ username: userName, password: password }),\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          const data = await response.json();\r\n          localStorage.setItem(\"token\", data.token);\r\n          // Здесь можно выполнить переход на другую страницу, если необходимо\r\n        } else {\r\n          // Обработка ошибки при неверном логине/пароле\r\n          console.error(\"Логін або пароль невірні\");\r\n        }\r\n      } catch (error) {\r\n        // Обработка других ошибок\r\n        console.error(\"Помилка під час авторизації\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Input\r\n        value={userName}\r\n        onChange={(e) => setUserName(e.target.value)}\r\n        placeholder=\"User name\"\r\n        showError={!!errors.userName}\r\n        errorMessage={errors.userName}\r\n      />\r\n      <Input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        showError={!!errors.password}\r\n        errorMessage={errors.password}\r\n      />\r\n      <Button onClick={handleSubmit} text=\"Login\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}