{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hillel \\u043A\\u0443\\u0440\\u0441\\\\React\\\\my-app\\\\client\\\\src\\\\components\\\\Input\\\\Input.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Input.css\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  onLogin,\n  error\n}) => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [errors, setErrors] = useState({\n    userName: false,\n    password: false\n  });\n  const handleLogin = () => {\n    // Перевірка, чи поля не пусті перед відправкою\n    if (!userName) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        userName: true\n      }));\n    }\n    if (!password) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        password: true\n      }));\n    }\n\n    // Виконати логіку авторизації тільки якщо всі поля заповнені\n    if (userName && password) {\n      onLogin(userName, password);\n    }\n  };\n  const handleInputChange = (fieldName, value) => {\n    // При зміні значення поля забрати помилку\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [fieldName]: false\n    }));\n\n    // Оновити стан поля\n    if (fieldName === \"userName\") {\n      setUserName(value);\n    } else if (fieldName === \"password\") {\n      setPassword(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"User name\",\n      value: userName,\n      onChange: e => setUserName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: showPassword ? \"text\" : \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eyeIcon\",\n      onClick: () => setShowPassword(!showPassword),\n      children: showPassword ? /*#__PURE__*/_jsxDEV(FaEyeSlash, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"2AoSWzp7SJNCLX60VHegaVx5L4U=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","FaEye","FaEyeSlash","jsxDEV","_jsxDEV","Input","onLogin","error","_s","userName","setUserName","password","setPassword","showPassword","setShowPassword","errors","setErrors","handleLogin","prevErrors","handleInputChange","fieldName","value","className","children","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Hillel курс/React/my-app/client/src/components/Input/Input.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Input.css\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\n\r\nconst Input = ({ onLogin, error }) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [errors, setErrors] = useState({\r\n    userName: false,\r\n    password: false,\r\n  });\r\n\r\n  const handleLogin = () => {\r\n    // Перевірка, чи поля не пусті перед відправкою\r\n    if (!userName) {\r\n      setErrors((prevErrors) => ({ ...prevErrors, userName: true }));\r\n    }\r\n    if (!password) {\r\n      setErrors((prevErrors) => ({ ...prevErrors, password: true }));\r\n    }\r\n\r\n    // Виконати логіку авторизації тільки якщо всі поля заповнені\r\n    if (userName && password) {\r\n      onLogin(userName, password);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (fieldName, value) => {\r\n    // При зміні значення поля забрати помилку\r\n    setErrors((prevErrors) => ({ ...prevErrors, [fieldName]: false }));\r\n\r\n    // Оновити стан поля\r\n    if (fieldName === \"userName\") {\r\n      setUserName(value);\r\n    } else if (fieldName === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"User name\"\r\n        value={userName}\r\n        onChange={(e) => setUserName(e.target.value)}\r\n      />\r\n      <input\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <div className=\"eyeIcon\" onClick={() => setShowPassword(!showPassword)}>\r\n        {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n      </div>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}