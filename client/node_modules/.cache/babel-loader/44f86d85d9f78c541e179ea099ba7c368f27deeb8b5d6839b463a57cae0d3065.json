{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hillel \\u043A\\u0443\\u0440\\u0441\\\\React\\\\my-app\\\\client\\\\src\\\\components\\\\Card\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\nimport logo from \"../../logo.svg\";\nimport Input from \"../../components/Input/Input\";\nimport Button from \"../../components/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleLogin = (userName, password) => {\n    // Спробуйте авторизувати користувача тут і зберегти токен у localStorage\n    // Після успішної авторизації встановіть isLoggedIn в true\n    // В разі помилки встановіть error з відповідним повідомленням\n    // Приклад перевірки логіну та паролю:\n    if (userName === \"admin\" && password === \"password123\") {\n      localStorage.setItem(\"token\", \"example_token\"); // Зберігаємо токен у localStorage\n      setIsLoggedIn(true);\n    } else {\n      setError(\"Логін або пароль невірні\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {},\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"NEfM2HvPFvZ1XE1UnqojteZUwiA=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","logo","Input","Button","jsxDEV","_jsxDEV","Card","_s","isLoggedIn","setIsLoggedIn","error","setError","handleLogin","userName","password","localStorage","setItem","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onClick","_c","$RefreshReg$"],"sources":["D:/Hillel курс/React/my-app/client/src/components/Card/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\nimport logo from \"../../logo.svg\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/Button/Button\";\r\n\r\nconst Card = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleLogin = (userName, password) => {\r\n    // Спробуйте авторизувати користувача тут і зберегти токен у localStorage\r\n    // Після успішної авторизації встановіть isLoggedIn в true\r\n    // В разі помилки встановіть error з відповідним повідомленням\r\n    // Приклад перевірки логіну та паролю:\r\n    if (userName === \"admin\" && password === \"password123\") {\r\n      localStorage.setItem(\"token\", \"example_token\"); // Зберігаємо токен у localStorage\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      setError(\"Логін або пароль невірні\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login-card\">\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <Input onLogin={handleLogin} />\r\n      <Button onClick={() => {}}>Login</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C;IACA;IACA;IACA;IACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,aAAa,EAAE;MACtDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;MAChDP,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLE,QAAQ,CAAC,0BAA0B,CAAC;IACtC;EACF,CAAC;EAED,oBACEN,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBb,OAAA;MAAKc,GAAG,EAAElB,IAAK;MAACgB,SAAS,EAAC,UAAU;MAACG,GAAG,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDnB,OAAA,CAACH,KAAK;MAACuB,OAAO,EAAEb;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BnB,OAAA,CAACF,MAAM;MAACuB,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;MAAAR,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxBID,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA0BV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}